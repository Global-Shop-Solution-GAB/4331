<?xml version="1.0" encoding="utf-8"?>
<SyntaxEdit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Pages>
    <DefaultPage>
      <Header />
      <Footer />
    </DefaultPage>
  </Pages>
  <DisplayStrings />
  <Selection>
    <SelectionRect>
      <Location>
        <X>0</X>
        <Y>263</Y>
      </Location>
      <Size>
        <Width>24</Width>
        <Height>15</Height>
      </Size>
      <X>0</X>
      <Y>263</Y>
      <Width>24</Width>
      <Height>15</Height>
    </SelectionRect>
    <Options>UseColors OverwriteBlocks SelectLineOnTripleClick CopyLineWhenEmpty SelectWordOnCtrlClick</Options>
  </Selection>
  <Gutter>
    <Options>PaintLineNumbers PaintBookMarks PaintLineModificators</Options>
  </Gutter>
  <Margin>
    <Visible>false</Visible>
  </Margin>
  <LineStyles />
  <LineSeparator />
  <Printing>
    <Footer />
    <Header />
  </Printing>
  <WhiteSpace />
  <TextSource>
    <Position>
      <X>0</X>
      <Y>263</Y>
    </Position>
    <Lexer>
      <Scheme>
        <Author>Quantum Whale, LLC.</Author>
        <Copyright>Copyright (c) 2004 - 2014 Quantum Whale LLC.</Copyright>
        <FileType>gas</FileType>
        <Version>1.5</Version>
        <Styles>
          <Style>
            <Name>idents</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>numbers</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>reswords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>comments</Name>
            <ForeColor>Green</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>xmlcomments</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>symbols</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>whitespace</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>strings</Name>
            <ForeColor>Maroon</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>directives</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>htmlparams</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>syntax errors</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>codes nippets</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>255:180:228:180</BackColor>
          </Style>
          <Style>
            <Name>GabReservedWords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>GabTokenWithBrackets</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>GabFunctionIntrinsicDebug</Name>
            <ForeColor>White</ForeColor>
            <BackColor>Red</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>GabVariable</Name>
            <ForeColor>Teal</ForeColor>
          </Style>
          <Style>
            <Name>GabVariableSystemDefined</Name>
            <ForeColor>Teal</ForeColor>
            <FontStyle>Bold Italic</FontStyle>
          </Style>
          <Style>
            <Name>GabGui</Name>
            <ForeColor>OrangeRed</ForeColor>
          </Style>
          <Style>
            <Name>GabProgramSubStartEnd</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>LightGray</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
        </Styles>
      </Scheme>
    </Lexer>
    <TextStrings>
      <Lines>
        <string>Program.Sub.ScreenSU.Start</string>
        <string>Gui.F_WODeletions..Create</string>
        <string>Gui.F_WODeletions..Size(6840,5625)</string>
        <string>Gui.F_WODeletions..MinX(6840)</string>
        <string>Gui.F_WODeletions..MinY(5000)</string>
        <string>Gui.F_WODeletions..Position(0,0)</string>
        <string>Gui.F_WODeletions..BackColor(-2147483633)</string>
        <string>Gui.F_WODeletions..MousePointer(0)</string>
        <string>Gui.F_WODeletions..Caption("Mass Deletion of Work Orders")</string>
        <string>Gui.F_WODeletions..Event(UnLoad,F_WODeletions_UnLoad)</string>
        <string>Gui.F_WODeletions.txtFrom.Create(TextBox,"",True,2505,300,0,195,405,True,0,"Arial",8,-2147483643,1)</string>
        <string>Gui.F_WODeletions.txtFrom.Locked(True)</string>
        <string>Gui.F_WODeletions.txtTo.Create(TextBox,"",True,2505,300,0,3495,405,True,0,"Arial",8,-2147483643,1)</string>
        <string>Gui.F_WODeletions.txtTo.Locked(True)</string>
        <string>Gui.F_WODeletions.lblFrom.Create(Label,"From Work Order:",True,1935,255,0,195,195,True,0,"Arial",8,-2147483633,0)</string>
        <string>Gui.F_WODeletions.lblTo.Create(Label,"To Work Order:",True,1935,255,0,3495,195,True,0,"Arial",8,-2147483633,0)</string>
        <string>Gui.F_WODeletions.cmdFrom.Create(Button)</string>
        <string>Gui.F_WODeletions.cmdFrom.Size(375,375)</string>
        <string>Gui.F_WODeletions.cmdFrom.Position(2805,345)</string>
        <string>Gui.F_WODeletions.cmdFrom.Caption("^")</string>
        <string>Gui.F_WODeletions.cmdFrom.Event(Click,cmdFrom_Click)</string>
        <string>Gui.F_WODeletions.cmdTo.Create(Button)</string>
        <string>Gui.F_WODeletions.cmdTo.Size(375,375)</string>
        <string>Gui.F_WODeletions.cmdTo.Position(6105,345)</string>
        <string>Gui.F_WODeletions.cmdTo.Caption("^")</string>
        <string>Gui.F_WODeletions.cmdTo.Event(Click,cmdTo_Click)</string>
        <string>Gui.F_WODeletions.cmdAdd.Create(Button)</string>
        <string>Gui.F_WODeletions.cmdAdd.Size(855,375)</string>
        <string>Gui.F_WODeletions.cmdAdd.Position(255,795)</string>
        <string>Gui.F_WODeletions.cmdAdd.Caption("Add")</string>
        <string>Gui.F_WODeletions.cmdAdd.Event(Click,cmdAdd_Click)</string>
        <string>Gui.F_WODeletions.cmdDelete.Create(Button)</string>
        <string>Gui.F_WODeletions.cmdDelete.Size(1125,375)</string>
        <string>Gui.F_WODeletions.cmdDelete.Position(255,4500)</string>
        <string>Gui.F_WODeletions.cmdDelete.Caption("Delete")</string>
        <string>Gui.F_WODeletions.cmdDelete.Event(Click,cmdDelete_Click)</string>
        <string>Gui.F_WODeletions.ggcRanges.Create(GsGridControl)</string>
        <string>Gui.F_WODeletions.ggcRanges.Size(6210,3105)</string>
        <string>Gui.F_WODeletions.ggcRanges.Position(195,1305)</string>
        <string>Gui.F_WODeletions.ggcRanges.Event(RowCellClick,ggcRanges_RowCellClick)</string>
        <string>Gui.F_WOProgBar..Create</string>
        <string>Gui.F_WOProgBar..Caption("Work order deletion in process.")</string>
        <string>Gui.F_WOProgBar..Size(13545,1575)</string>
        <string>Gui.F_WOProgBar..MinX(0)</string>
        <string>Gui.F_WOProgBar..MinY(0)</string>
        <string>Gui.F_WOProgBar..Position(0,0)</string>
        <string>Gui.F_WOProgBar..BackColor(-2147483637)</string>
        <string>Gui.F_WOProgBar..ControlBox(False)</string>
        <string>Gui.F_WOProgBar..MaxButton(False)</string>
        <string>Gui.F_WOProgBar..MinButton(False)</string>
        <string>Gui.F_WOProgBar..MousePointer(0)</string>
        <string>Gui.F_WOProgBar..Sizeable(False)</string>
        <string>Gui.F_WOProgBar..Enabled(False)</string>
        <string>Gui.F_WOProgBar.pbTIMEOUT.Create(ProgressBar)</string>
        <string>Gui.F_WOProgBar.pbTIMEOUT.Size(12840,330)</string>
        <string>Gui.F_WOProgBar.pbTIMEOUT.Position(210,435)</string>
        <string>Gui.F_WOProgBar.lblRatio.Create(Label,"Label",True,1935,255,0,11115,195,True,1,"Arial",8,-2147483637,0)</string>
        <string>Program.Sub.ScreenSU.End</string>
        <string />
        <string>Program.Sub.Preflight.Start</string>
        <string>Program.Sub.Preflight.End</string>
        <string />
        <string>Program.Sub.Main.Start</string>
        <string>Gui.F_WODeletions.cmdAdd.Anchor(5)</string>
        <string>Gui.F_WODeletions.lblFrom.Anchor(5)</string>
        <string>Gui.F_WODeletions.lblTo.Anchor(5)</string>
        <string>Gui.F_WODeletions.cmdFrom.Anchor(5)</string>
        <string>Gui.F_WODeletions.cmdTo.Anchor(5)</string>
        <string>Gui.F_WODeletions.cmdFrom.Anchor(5)</string>
        <string>Gui.F_WODeletions.txtFrom.Anchor(5)</string>
        <string>Gui.F_WODeletions.txtTo.Anchor(5)</string>
        <string>Gui.F_WODeletions.ggcRanges.Anchor(15)</string>
        <string>Gui.F_WODeletions.cmdDelete.Anchor(6)</string>
        <string />
        <string>F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, v.Ambient.PUser, V.Ambient.PPass)</string>
        <string />
        <string>'Create data Table with columns From:, To: and Remove button</string>
        <string>F.Data.DataTable.Create("WORanges", True)</string>
        <string>F.Data.DataTable.AddColumn("WORanges", "From:", String)</string>
        <string>F.Data.DataTable.AddColumn("WORanges", "To:", String)</string>
        <string>F.Data.DataTable.AddColumn("WORanges", "Remove", String)</string>
        <string />
        <string>F.Data.DataView.Create("WORanges", "Display")</string>
        <string>Gui.F_WODeletions.ggcRanges.AddGridviewFromDataview("RangeView", "WORanges", "Display")</string>
        <string />
        <string>Gui.F_WODeletions.ggcRanges.SetColumnProperty("RangeView", "From:", "ReadOnly", True)</string>
        <string>Gui.F_WODeletions.ggcRanges.SetColumnProperty("RangeView", "To:", "ReadOnly", True)</string>
        <string>Gui.F_WODeletions.ggcRanges.SetColumnProperty("RangeView", "Remove", "ReadOnly", True)</string>
        <string>Gui.F_WODeletions.ggcRanges.SetColumnProperty("RangeView", "Remove", "AllowEdit", False)</string>
        <string>Gui.F_WODeletions.ggcRanges.SetColumnProperty("RangeView", "Remove", "Caption", "-")</string>
        <string>Gui.F_WODeletions.ggcRanges.ColumnEdit("RangeView", "Remove", "EditorButton", "Remove")</string>
        <string />
        <string>Gui.F_WODeletions.ggcRanges.MainView("RangeView")</string>
        <string />
        <string>'Set up grid so that the only available column to click on is the remove column.</string>
        <string />
        <string>Gui.F_WODeletions..Show</string>
        <string />
        <string>Program.Sub.Main.End</string>
        <string />
        <string>Program.Sub.cmdFrom_Click.Start</string>
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sTitle.Declare(String)</string>
        <string>V.Local.iWidth.Declare(Long)</string>
        <string>V.Local.sWO.Declare(String)</string>
        <string />
        <string>f.Intrinsic.UI.SetBrowserHotTypeAhead(true)</string>
        <string />
        <string>f.Intrinsic.String.Split("Job*!*Suffix*!*Desc*!*Part*!*Date Due","*!*",v.Local.sTitle)</string>
        <string>f.Intrinsic.String.Split("1500*!*1000*!*2000*!*1500*!*1500","*!*",v.Local.iWidth)</string>
        <string />
        <string>'Create browser for the From Work Order textbox.</string>
        <string>F.Intrinsic.UI.Browser("Select A Work Order","con","Select Job,Suffix,Description,Part,Date_Due From V_Job_Header",v.Local.sTitle,v.Local.iWidth,v.Local.sRet) </string>
        <string>F.Intrinsic.Control.If(v.Local.sRet.Trim,&lt;&gt;,"***CANCEL***") </string>
        <string>	F.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sRet) </string>
        <string>	F.Intrinsic.String.Build("{0}-{1}", V.Local.sRet(0).Trim, V.Local.sRet(1).Trim, V.Local.sWO)</string>
        <string>	Gui.F_WODeletions.txtFrom.Text(V.Local.sWO)</string>
        <string>	Gui.F_WODeletions.txtTo.Text(V.Local.sWO)	</string>
        <string>Function.Intrinsic.Control.Else </string>
        <string>	Gui.F_WODeletions.txtFrom.Text("")</string>
        <string>	Gui.F_WODeletions.txtTo.Text("")</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string>'Print the Work Order in both textboxes.</string>
        <string />
        <string>Program.Sub.cmdFrom_Click.End</string>
        <string />
        <string>Program.Sub.cmdTo_Click.Start</string>
        <string>'Create browser for the To Work Order Textbox. Have it start from the work order on textbox</string>
        <string />
        <string>V.Local.sRet.Declare(String)</string>
        <string>V.Local.sTitle.Declare(String)</string>
        <string>V.Local.iWidth.Declare(Long)</string>
        <string>V.Local.sWO.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string />
        <string>f.Intrinsic.UI.SetBrowserHotTypeAhead(true)</string>
        <string />
        <string>f.Intrinsic.String.Split("Job*!*Suffix*!*Desc*!*Part*!*Date Due","*!*",v.Local.sTitle)</string>
        <string>f.Intrinsic.String.Split("1500*!*1000*!*2000*!*1500*!*1500","*!*",v.Local.iWidth)</string>
        <string />
        <string>V.Local.sWO.Set(V.Screen.F_WODeletions!txtFrom.Text)</string>
        <string>F.Intrinsic.Control.If(V.Local.sWO.Trim, &lt;&gt;, "")</string>
        <string>	F.Intrinsic.String.Split(V.Local.sWO, "-", V.Local.sWO)</string>
        <string>	F.Intrinsic.String.Build("Select Job,Suffix,Description,Part,Date_Due From V_Job_Header where RTrim(Job)+RTrim(Suffix) &gt;= '{0}'+'{1}'", V.Local.sWO(0).Trim, V.Local.sWO(1).Trim, V.Local.sSql)</string>
        <string>	F.Intrinsic.UI.Browser("Select A Work Order","con",V.Local.sSql,v.Local.sTitle,v.Local.iWidth,v.Local.sRet) </string>
        <string>	F.Intrinsic.Control.If(v.Local.sRet.Trim,&lt;&gt;,"***CANCEL***") </string>
        <string>		F.Intrinsic.String.Split(v.Local.sret,"*!*",v.Local.sRet) </string>
        <string>		F.Intrinsic.String.Build("{0}-{1}", V.Local.sRet(0).Trim, V.Local.sRet(1).Trim, V.Local.sWO)</string>
        <string>		Gui.F_WODeletions.txtTo.Text(V.Local.sWO)	</string>
        <string>	Function.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>'Print the Work Order in both textboxes.</string>
        <string />
        <string>Program.Sub.cmdTo_Click.End</string>
        <string />
        <string>Program.Sub.cmdAdd_Click.Start</string>
        <string>'Check to see if any work order in textboxes falls in any range already selected.</string>
        <string>V.Local..BulkDeclareString(sFromWO, sToWO)</string>
        <string />
        <string>V.Local.sFromWO.Set(V.Screen.F_WODeletions!txtFrom.Text)</string>
        <string>V.Local.sToWO.Set(V.Screen.F_WODeletions!txtTo.Text)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Local.sFromWO.Trim, =, "")</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.ElseIf(V.Local.sToWO.Trim, =, "")</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Data.DataTable.AddRow("WORanges", "From:", V.Local.sFromWO.Trim, "To:", V.Local.sToWO, "Remove", "Remove")</string>
        <string />
        <string>Gui.F_WODeletions.txtFrom.Text("")</string>
        <string>Gui.F_WODeletions.txtTo.Text("")</string>
        <string />
        <string>Program.Sub.cmdAdd_Click.End</string>
        <string />
        <string>Program.Sub.cmdDelete_Click.Start</string>
        <string>V.Local..BulkDeclareString(sRet, sSql, sFromWO, sToWO, sParams, sWO, sSuff)</string>
        <string>V.Local.iCount.Declare(Long)</string>
        <string>V.Local.iMax.Declare(Long)</string>
        <string />
        <string>'Generate message box to confirm deletion</string>
        <string>F.Intrinsic.UI.Msgbox("Are you sure you would like to delete the work orders that fall in the ranges listed?", "Delete bulk of Work Orders", 4, V.Local.sRet)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Local.sRet, &lt;&gt;, 6)</string>
        <string>	F.Intrinsic.Control.ExitSub</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>Gui.F_WODeletions..Visible(False)</string>
        <string />
        <string>F.Data.DataTable.Create("WorkOrders", True)</string>
        <string>F.Data.DataTable.AddColumn("WorkOrders", "Job", "String")</string>
        <string>F.Data.DataTable.AddColumn("WorkOrders", "Suffix", "String")</string>
        <string />
        <string>F.Intrinsic.Control.For(V.Local.iCount, 0, V.DataTable.WORanges.RowCount--, 1)</string>
        <string>	F.Intrinsic.String.Split(V.DataTable.WORanges(V.Local.iCount).From:!FieldValTrim, "-", V.Local.sFromWO)</string>
        <string>	F.Intrinsic.String.Split(V.DataTable.WORanges(V.Local.iCount).To:!FieldValTrim, "-", V.Local.sToWO)</string>
        <string>	F.Intrinsic.String.Build("Select RTrim(Job), RTrim(Suffix) from V_Job_Header where RTrim(Job)+RTrim(Suffix) between '{0}'+'{1}' and '{2}'+'{3}' ", V.Local.sFromWO(0).Trim, V.Local.sFromWO(1).Trim, V.Local.sToWO(0).Trim, V.Local.sToWO(1).Trim, V.Local.sSql)</string>
        <string>	F.Data.DataTable.CreateFromSQL("Temp", "con", V.Local.sSql)</string>
        <string>	F.Data.DataTable.Merge("Temp", "WorkOrders", True, 1)</string>
        <string>	F.Data.DataTable.Close("Temp")	</string>
        <string>F.Intrinsic.Control.Next(V.Local.iCount)</string>
        <string />
        <string>F.Data.DataTable.AddExpressionColumn("WorkOrders", "JOBSUFF", "String", "Job + Suffix")</string>
        <string />
        <string>F.Data.DataView.Create("WorkOrders", "WOView")</string>
        <string>F.Data.DataView.ToDataTableDistinct("WorkOrders", "WOView", "Final", "JOBSUFF*!*JOB*!*SUFFIX")</string>
        <string />
        <string>'Distinct Work Orders/suffix are now stored in "Final" table. Just need to loop through the entire table and delete each line with a callwrapper.</string>
        <string>'Depending on the size of the table, this may be a long process..</string>
        <string />
        <string>V.Local.iMax.Set(V.DataTable.Final.RowCount)</string>
        <string>V.Local.sSql.Set(" out of ")</string>
        <string>Gui.F_WOProgBar.pbTIMEOUT.Min(0)</string>
        <string>Gui.F_WOProgBar.pbTIMEOUT.Max(V.Local.iMax)</string>
        <string />
        <string>Gui.F_WOProgBar..Show</string>
        <string />
        <string>F.Intrinsic.Control.For(V.Local.iCount, 0, V.DataTable.Final.RowCount--, 1)</string>
        <string>	F.Intrinsic.String.Build("{0}{1}{2} deleted", V.Local.iCount, V.Local.sSql, V.Local.iMax, V.Local.sRet)</string>
        <string>	Gui.F_WOProgBar.lblRatio.Text(V.Local.sRet)</string>
        <string>	Gui.F_WOProgBar.pbTIMEOUT.Value(V.Local.iCount)</string>
        <string>	'Get Work Order/suffix from DataTable "Final" line V.L.iCount</string>
        <string>	</string>
        <string>	V.Local.sWO.Set(V.DataTable.Final(V.Local.iCount).JOB!FieldValTrim)</string>
        <string>	V.Local.sSuff.Set(V.DataTable.Final(V.Local.iCount).SUFFIX!FieldValTrim)</string>
        <string>	</string>
        <string>	'if the suffix is blank set it as ZDR</string>
        <string>	f.Intrinsic.Control.If(v.Local.sSuff.Trim,=,"")</string>
        <string>		v.Local.sSuff.Set("ZDR")</string>
        <string>	f.Intrinsic.Control.EndIf</string>
        <string>	</string>
        <string>	'We will be deleting a single work order at a time</string>
        <string>	F.Intrinsic.String.Build("{0}!*!{1}!*!{0}!*!{1}", V.Local.sWO, V.Local.sSuff, V.Local.sParams)</string>
        <string />
        <string>	'Use callwrapper to delete work order</string>
        <string>	F.Global.General.CallWrapperSync(2070, V.Local.sParams)</string>
        <string>F.Intrinsic.Control.Next(V.Local.iCount)</string>
        <string />
        <string>gui.F_WOProgBar..Visible(False)</string>
        <string />
        <string>F.Intrinsic.UI.Msgbox("Bulk work order deletion process complete", "Ending program")</string>
        <string />
        <string>F.Intrinsic.Control.CallSub(f_wodeletions_unload)</string>
        <string />
        <string>Program.Sub.cmdDelete_Click.End</string>
        <string />
        <string>Program.Sub.F_WODeletions_UnLoad.Start</string>
        <string>'Close everything</string>
        <string>F.Intrinsic.Control.End</string>
        <string />
        <string>Program.Sub.F_WODeletions_UnLoad.End</string>
        <string />
        <string>Program.Sub.ggcRanges_RowCellClick.Start</string>
        <string>V.Local.iRow.Declare(Long)</string>
        <string />
        <string>'Check if they clicked on remove. If so, delete the row from the Data Table</string>
        <string>F.Intrinsic.Control.If(V.Args.Column, =, "Remove")</string>
        <string>	V.Local.iRow.Set(V.Args.RowHandle)</string>
        <string>	F.Data.DataTable.DeleteRow("WORanges", V.Local.iRow)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>Program.Sub.ggcRanges_RowCellClick.End</string>
        <string />
        <string>Program.Sub.Comments.Start</string>
        <string>${$0$}$GCG_4356_PayrollExport$}$FEQ$}$2/15/2017 3:10:36 PM$}$False</string>
        <string>${$2$}$$}$$}$0$}$3$}$ORD1FRTV$}$2/16/2017 7:29:01 AM$}$We are calling the World Ship program to get these additional Freight added to the shipment before the order goes to be invoiced.  </string>
        <string />
        <string>You should be able to use the existing core module ORD1FRTV which is used by the  </string>
        <string>old WorldShip interface to add freight to shipments. After the shipment is selected to invoice, you would call this module to update/add freight to the shipment. The parameters must be passed in the specified order with the exact number of characters with no delimiters between. The parameter string is as follows: </string>
        <string />
        <string>cccooooooossssaaaaaaaaaaaaccccccccccccm </string>
        <string />
        <string>ccc is the Company code, ooooooo is the Order Number, ssss is the Shipment Sequence, aaaaaaaaaaaa is the freight charge (the decimal is implied with 10 digits before the decimal and 2 digits after), cccccccccccc is the freight cost (the decimal is implied with 10 digits before the decimal and 2 digits after), and m is the suppress message flag (a value of "Y" will suppress any error messages). As you are running from a screen hook, I would not suppress messages. The total length of the parameter string is 39 characters. Here is an example: </string>
        <string />
        <string>INF00948570000000000002500000000001500N </string>
        <string />
        <string>where the company is INF, the order is 0094857, the shipment sequence is 0000, the freight amount is 0000000000002500 (representing 25.00), the freight cost is 000000001500 (representing 15.00), and messages are not suppressed.</string>
        <string>${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$This will be a custom GAB script that will run from a custom Menu Item under Bill of Material -&gt; File -&gt; Custom Cobalt BOM Import.  The user will navigate to the xml file that needs to be loaded into Global Shop.  Once the xml is parsed there will be a search in Global Shop to see if a BOM already exists for that Part Number.  If one already exists a compare screen will display showing the differences between the two.  If one does not exist then the screen will display the BOM as it will be uploaded into Global Shop.  Any parts that are listed in the BOM that are not Inventory Parts will be highlighted in Yellow.  If there are any parts not in inventory the user will have the option to click the create Parts button to generate those parts in Global Shop.  If the BOM exists in Global shop then any differences on the new import will be highlighted in Red.  After the Parts have been created then the Upload button will upload and override any previous BOM for that part.</string>
        <string>Program.Sub.Comments.End</string>
      </Lines>
    </TextStrings>
  </TextSource>
  <Scrolling>
    <WindowOriginY>152</WindowOriginY>
  </Scrolling>
  <Outlining>
    <AllowOutlining>true</AllowOutlining>
    <ImageSize>8</ImageSize>
    <Ranges>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>0</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>57</Y>
        </EndPoint>
        <Text>Program.Sub.ScreenSU</Text>
        <DisplayText>Program.Sub.ScreenSU</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>59</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>60</Y>
        </EndPoint>
        <Text>Program.Sub.Preflight</Text>
        <DisplayText>Program.Sub.Preflight</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>62</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>98</Y>
        </EndPoint>
        <Text>Program.Sub.Main</Text>
        <DisplayText>Program.Sub.Main</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>100</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>125</Y>
        </EndPoint>
        <Text>Program.Sub.cmdFrom_Click</Text>
        <DisplayText>Program.Sub.cmdFrom_Click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>127</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>154</Y>
        </EndPoint>
        <Text>Program.Sub.cmdTo_Click</Text>
        <DisplayText>Program.Sub.cmdTo_Click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>156</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>174</Y>
        </EndPoint>
        <Text>Program.Sub.cmdAdd_Click</Text>
        <DisplayText>Program.Sub.cmdAdd_Click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>176</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>245</Y>
        </EndPoint>
        <Text>Program.Sub.cmdDelete_Click</Text>
        <DisplayText>Program.Sub.cmdDelete_Click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>247</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>251</Y>
        </EndPoint>
        <Text>Program.Sub.F_WODeletions_UnLoad</Text>
        <DisplayText>Program.Sub.F_WODeletions_UnLoad</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>253</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>261</Y>
        </EndPoint>
        <Text>Program.Sub.ggcRanges_RowCellClick</Text>
        <DisplayText>Program.Sub.ggcRanges_RowCellClick</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>263</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>278</Y>
        </EndPoint>
        <Text>Program.Sub.Comments</Text>
        <DisplayText>Program.Sub.Comments</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
    </Ranges>
  </Outlining>
  <HyperText />
  <Spelling />
  <Braces />
</SyntaxEdit>